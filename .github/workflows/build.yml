name: build

on: push

jobs:
  build-linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-5.15.2
      - uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v2
      - name: Build
        run: |
          qmake "CONFIG+=release"
          make
          make clean
      - name: Build encrypted
        run: |
          qmake "CONFIG+=release" "CONFIG+=crypt"
          make
          make clean

  build-macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-5.15.2
      - uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Get the version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - uses: actions/checkout@v2
      - name: Build
        run: |
          qmake "CONFIG+=release"
          make
      - name: Deploy
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          macdeployqt build/release/EffortLog.app -always-overwrite -verbose=3 -appstore-compliant -dmg
          otool -L build/release/EffortLog.app/Contents/MacOS/EffortLog
          mv build/release/EffortLog.dmg EffortLog_${{ steps.get_version.outputs.VERSION }}_osx.dmg
          make clean
          rm -rf build/release/EffortLog.dmg
      - name: Build encrypted
        run: |
          qmake "CONFIG+=release" "CONFIG+=crypt"
          make
      - name: Deploy encrypted
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          macdeployqt build/release/EffortLog.app -always-overwrite -verbose=3 -appstore-compliant -dmg
          otool -L build/release/EffortLog.app/Contents/MacOS/EffortLog
          mv build/release/EffortLog.dmg EffortLog_${{ steps.get_version.outputs.VERSION }}_osx_encrypted.dmg
          make clean
          rm -rf build/release/EffortLog.dmg
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: EffortLog_*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Windows
    runs-on: windows-latest
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-5.15.2
      - uses: jurplel/install-qt-action@v2
        with:
          version: 5.15.2
          arch: win64_mingw81
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Install Openssl
        run: choco install openssl -y
      - name: Get the version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash
      - uses: actions/checkout@v2
      - name: Build
        shell: cmd
        run: |
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          qmake "CONFIG+=release"
          make
      - name: Deploy
        if: startsWith(github.ref, 'refs/tags/')
        shell: cmd
        run: |
          mkdir bin
          move build\release\effort-log.exe bin
          windeployqt bin\effort-log.exe
          7z a effort-log_${{ steps.get_version.outputs.VERSION }}_win64.zip bin\*
          make clean
          rmdir /Q /S bin
      - name: Build encrypted
        shell: cmd
        run: |
          call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          qmake "CONFIG+=release" "CONFIG+=crypt"
          make
      - name: Deploy encrypted
        if: startsWith(github.ref, 'refs/tags/')
        shell: cmd
        run: |
          mkdir bin
          move build\release\effort-log.exe bin
          windeployqt bin\effort-log.exe
          copy "C:\Program Files\OpenSSL\libcrypto-1_1-x64.dll" bin\libcrypto-1_1-x64.dll
          copy "C:\Program Files\OpenSSL\libssl-1_1-x64.dll" bin\libssl-1_1-x64.dll
          7z a effort-log_${{ steps.get_version.outputs.VERSION }}_win64_encrypted.zip bin\*
          make clean
          rmdir /Q /S bin
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: effort-log_*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
