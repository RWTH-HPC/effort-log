name: build

on: push

jobs:
  build:
    strategy:
      matrix:
        qt_version: [5.15.2, 6.1.0]
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-${{ matrix.qt_version }}
      - uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v2
      - name: Get the version
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0'
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Build
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .
      - name: Deploy macOS
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'macos-latest'
        run: |
          macdeployqt build/EffortLog.app -always-overwrite -verbose=3 -appstore-compliant -dmg
          otool -L build/EffortLog.app/Contents/MacOS/EffortLog
          mv build/EffortLog.dmg EffortLog_${{ steps.get_version.outputs.VERSION }}_osx.dmg
          rm -rf build
      - name: Deploy Windows
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'windows-latest'
        shell: cmd
        run: |
          mkdir bin
          windeployqt --verbose 2 --no-translations --dir .\bin .\build\effort-log.exe
          move .\build\effort-log.exe .\bin
          cd .\bin
          7z a effort-log_${{ steps.get_version.outputs.VERSION }}_win64.zip .\*
          cd ..
          mv .\bin\effort-log_${{ steps.get_version.outputs.VERSION }}_win64.zip .\
          rmdir /Q /S bin
      - name: Release macOS
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'macos-latest'
        with:
          files: EffortLog_*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release Windows
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'windows-latest'
        with:
          files: effort-log_*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-encrypted:
    strategy:
      matrix:
        qt_version: [5.15.2, 6.1.0]
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache-${{ matrix.qt_version }}
      - uses: jurplel/install-qt-action@v2
        with:
          version: ${{ matrix.qt_version }}
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - uses: actions/checkout@v2
      - name: Get the version
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0'
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Build encrypted Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir build
          cd build
          cmake -DCRYPT=ON ..
          cmake --build .
      - name: Build encrypted MacOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir build
          cd build
          cmake -DCRYPT=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl ..
          cmake --build .
      - name: Build encrypted Windows
        if: matrix.os == 'windows-latest'
        run: |
          choco install openssl -y
          mkdir build
          cd build
          cmake -DCRYPT=ON -DOPENSSL_ROOT_DIR="C:\Program Files\OpenSSL-Win64" ..
          cmake --build .
      - name: Deploy encrypted macOS
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'macos-latest'
        run: |
          macdeployqt build/EffortLog.app -always-overwrite -verbose=3 -appstore-compliant -dmg
          otool -L build/EffortLog.app/Contents/MacOS/EffortLog
          mv build/EffortLog.dmg EffortLog_${{ steps.get_version.outputs.VERSION }}_osx_encrypted.dmg
          rm -rf build
      - name: Deploy encrypted Windows
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'windows-latest'
        shell: cmd
        run: |
          mkdir bin
          windeployqt --verbose 2 --no-translations --dir .\bin .\build\effort-log.exe
          move .\build\effort-log.exe .\bin
          copy "C:\Program Files\OpenSSL-Win64\libcrypto-1_1-x64.dll" bin\libcrypto-1_1-x64.dll
          copy "C:\Program Files\OpenSSL-Win64\libssl-1_1-x64.dll" bin\libssl-1_1-x64.dll
          cd .\bin
          7z a effort-log_${{ steps.get_version.outputs.VERSION }}_win64_encrypted.zip .\*
          cd ..
          mv .\bin\effort-log_${{ steps.get_version.outputs.VERSION }}_win64_encrypted.zip .\
          rmdir /Q /S bin
      - name: Release macOS
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'macos-latest'
        with:
          files: EffortLog_*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release Windows
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && matrix.qt_version == '6.1.0' && matrix.os == 'windows-latest'
        with:
          files: effort-log_*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
